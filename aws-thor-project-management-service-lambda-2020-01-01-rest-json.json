{
    "version": "2.0",
    "metadata": {
        "apiVersion": "2020-01-01",
        "endpointPrefix": "AWSThorProjectManagementServiceLambda",
        "protocol": "rest-json",
        "serviceFullName": "AWS Thor Project Management Service",
        "serviceId": "awsthorprojectmanagementservicelambda",
        "signatureVersion": "v4",
        "signingName": "thor",
        "uid": "aws-thor-project-management-service-lambda-2020-01-01",
        "download_location": [
            "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
        ]
    },
    "operations": {
        "AssociateProjectAdminUser": {
            "name": "AssociateProjectAdminUser",
            "http": {
                "method": "POST",
                "requestUri": "/projects/{Name}/admins"
            },
            "input": {
                "shape": "AssociateProjectAdminUserRequest"
            },
            "output": {
                "shape": "AssociateProjectAdminUserResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ResourceNotFoundException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "AssociateProjectGroup": {
            "name": "AssociateProjectGroup",
            "http": {
                "method": "POST",
                "requestUri": "/projects/{Name}/groups"
            },
            "input": {
                "shape": "AssociateProjectGroupRequest"
            },
            "output": {
                "shape": "AssociateProjectGroupResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "CreateProject": {
            "name": "CreateProject",
            "http": {
                "method": "POST",
                "requestUri": "/projects"
            },
            "input": {
                "shape": "CreateProjectRequest"
            },
            "output": {
                "shape": "CreateProjectResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "DeleteProject": {
            "name": "DeleteProject",
            "http": {
                "method": "DELETE",
                "requestUri": "/projects/{Name}"
            },
            "input": {
                "shape": "DeleteProjectRequest"
            },
            "output": {
                "shape": "DeleteProjectResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ResourceNotFoundException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "DisassociateProjectAdminUser": {
            "name": "DisassociateProjectAdminUser",
            "http": {
                "method": "DELETE",
                "requestUri": "/projects/{Name}/admins/{UserId}"
            },
            "input": {
                "shape": "DisassociateProjectAdminUserRequest"
            },
            "output": {
                "shape": "DisassociateProjectAdminUserResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ResourceNotFoundException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "DisassociateProjectGroup": {
            "name": "DisassociateProjectGroup",
            "http": {
                "method": "DELETE",
                "requestUri": "/projects/{Name}/groups/{GroupId}"
            },
            "input": {
                "shape": "DisassociateProjectGroupRequest"
            },
            "output": {
                "shape": "DisassociateProjectGroupResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "GetProject": {
            "name": "GetProject",
            "http": {
                "method": "GET",
                "requestUri": "/projects/{Name}"
            },
            "input": {
                "shape": "GetProjectRequest"
            },
            "output": {
                "shape": "GetProjectResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ResourceNotFoundException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "GetProjectAdminUser": {
            "name": "GetProjectAdminUser",
            "http": {
                "method": "GET",
                "requestUri": "/projects/{Name}/admins/{UserId}"
            },
            "input": {
                "shape": "GetProjectAdminUserRequest"
            },
            "output": {
                "shape": "GetProjectAdminUserResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ResourceNotFoundException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "ListProjectAdminUsers": {
            "name": "ListProjectAdminUsers",
            "http": {
                "method": "GET",
                "requestUri": "/projects/{Name}/admins"
            },
            "input": {
                "shape": "ListProjectAdminUsersRequest"
            },
            "output": {
                "shape": "ListProjectAdminUsersResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "ListProjects": {
            "name": "ListProjects",
            "http": {
                "method": "GET",
                "requestUri": "/projects"
            },
            "input": {
                "shape": "ListProjectsRequest"
            },
            "output": {
                "shape": "ListProjectsResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "ListTagsForResource": {
            "name": "ListTagsForResource",
            "http": {
                "method": "GET",
                "requestUri": "/tags/{ResourceArn}"
            },
            "input": {
                "shape": "ListTagsForResourceRequest"
            },
            "output": {
                "shape": "ListTagsForResourceResponse"
            },
            "errors": [
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "LockServiceLinkedRole": {
            "name": "LockServiceLinkedRole",
            "http": {
                "method": "POST",
                "requestUri": "/slr-deletion/lock"
            },
            "input": {
                "shape": "LockServiceLinkedRoleRequest"
            },
            "output": {
                "shape": "LockServiceLinkedRoleResponse"
            },
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "TagResource": {
            "name": "TagResource",
            "http": {
                "method": "POST",
                "requestUri": "/tags/{ResourceArn}"
            },
            "input": {
                "shape": "TagResourceRequest"
            },
            "output": {
                "shape": "TagResourceResponse"
            },
            "errors": [
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "UnlockServiceLinkedRole": {
            "name": "UnlockServiceLinkedRole",
            "http": {
                "method": "POST",
                "requestUri": "/slr-deletion/unlock"
            },
            "input": {
                "shape": "UnlockServiceLinkedRoleRequest"
            },
            "output": {
                "shape": "UnlockServiceLinkedRoleResponse"
            },
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "UntagResource": {
            "name": "UntagResource",
            "http": {
                "method": "DELETE",
                "requestUri": "/tags/{ResourceArn}"
            },
            "input": {
                "shape": "UntagResourceRequest"
            },
            "output": {
                "shape": "UntagResourceResponse"
            },
            "errors": [
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "UpdateProject": {
            "name": "UpdateProject",
            "http": {
                "method": "PUT",
                "requestUri": "/projects/{Name}"
            },
            "input": {
                "shape": "UpdateProjectRequest"
            },
            "output": {
                "shape": "UpdateProjectResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "ResourceNotFoundException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        },
        "UpdateUserPoolSource": {
            "name": "UpdateUserPoolSource",
            "http": {
                "method": "PUT",
                "requestUri": "/projects/{Name}/userpoolsource/{UserPoolSource}"
            },
            "input": {
                "shape": "UpdateUserPoolSourceRequest"
            },
            "output": {
                "shape": "UpdateUserPoolSourceResponse"
            },
            "errors": [
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "download_location": [
                "https://a.b.cdn.console.awsstatic.com/a/v1/JI3PJWAYCTU3KZD43RWUBONRDMHQHDSSXVJARIWNR2ZGICM7QTHQ/main.js"
            ]
        }
    },
    "shapes": {
        "AccessDeniedException": {
            "type": "structure",
            "members": {
                "Message": {
                    "shape": "ErrorMessage"
                }
            },
            "error": {
                "httpStatusCode": 403
            },
            "exception": true
        },
        "AccessorId": {
            "type": "string",
            "max": 512,
            "min": 1,
            "pattern": "^([a-zA-Z0-9]+[/.-]+)+([a-zA-Z0-9])+[.]?$"
        },
        "AdminUser": {
            "type": "structure",
            "required": [
                "Id",
                "Name",
                "DisplayName",
                "Email"
            ],
            "members": {
                "Id": {
                    "shape": "UserId"
                },
                "Name": {
                    "shape": "UserName"
                },
                "DisplayName": {
                    "shape": "DisplayName"
                },
                "Email": {
                    "shape": "Email"
                }
            },
            "sensitive": true
        },
        "AdminUsersList": {
            "type": "list",
            "member": {
                "shape": "AdminUser"
            }
        },
        "Arn": {
            "type": "string",
            "max": 1600,
            "min": 8,
            "pattern": "^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$"
        },
        "AssociateProjectAdminUserRequest": {
            "type": "structure",
            "required": [
                "Name",
                "UserId"
            ],
            "members": {
                "Name": {
                    "shape": "Name",
                    "location": "uri",
                    "locationName": "Name"
                },
                "UserId": {
                    "shape": "UserId"
                }
            }
        },
        "AssociateProjectAdminUserResponse": {
            "type": "structure",
            "members": {
                "ProjectUserAssociation": {
                    "shape": "ProjectUserAssociation"
                }
            }
        },
        "AssociateProjectGroupRequest": {
            "type": "structure",
            "required": [
                "Name",
                "GroupId"
            ],
            "members": {
                "Name": {
                    "shape": "Name",
                    "location": "uri",
                    "locationName": "Name"
                },
                "GroupId": {
                    "shape": "AccessorId"
                }
            }
        },
        "AssociateProjectGroupResponse": {
            "type": "structure",
            "members": {
                "ProjectGroupAssociation": {
                    "shape": "ProjectGroupAssociation"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "ConflictException": {
            "type": "structure",
            "members": {
                "Message": {
                    "shape": "ErrorMessage"
                }
            },
            "error": {
                "httpStatusCode": 409
            },
            "exception": true
        },
        "CreateProjectRequest": {
            "type": "structure",
            "required": [
                "Name",
                "DisplayName",
                "Type"
            ],
            "members": {
                "Name": {
                    "shape": "Name"
                },
                "DisplayName": {
                    "shape": "DisplayName"
                },
                "Type": {
                    "shape": "ProjectType"
                },
                "Tags": {
                    "shape": "TagMap"
                },
                "KmsKeyId": {
                    "shape": "KmsKeyId"
                },
                "UserPoolSource": {
                    "shape": "UserPoolSource"
                }
            }
        },
        "CreateProjectResponse": {
            "type": "structure",
            "members": {
                "Project": {
                    "shape": "Project"
                }
            }
        },
        "DataExportConfiguration": {
            "type": "structure",
            "members": {
                "KinesisDataExportConfiguration": {
                    "shape": "KinesisDataExportConfiguration"
                }
            }
        },
        "DeleteProjectRequest": {
            "type": "structure",
            "required": [
                "Name"
            ],
            "members": {
                "Name": {
                    "shape": "Name",
                    "location": "uri",
                    "locationName": "Name"
                }
            }
        },
        "DeleteProjectResponse": {
            "type": "structure",
            "members": {
                "Name": {
                    "shape": "Name"
                }
            }
        },
        "DisassociateProjectAdminUserRequest": {
            "type": "structure",
            "required": [
                "Name",
                "UserId"
            ],
            "members": {
                "Name": {
                    "shape": "Name",
                    "location": "uri",
                    "locationName": "Name"
                },
                "UserId": {
                    "shape": "UserId",
                    "location": "uri",
                    "locationName": "UserId"
                }
            }
        },
        "DisassociateProjectAdminUserResponse": {
            "type": "structure",
            "members": {
                "ProjectUserAssociation": {
                    "shape": "ProjectUserAssociation"
                }
            }
        },
        "DisassociateProjectGroupRequest": {
            "type": "structure",
            "required": [
                "Name",
                "GroupId"
            ],
            "members": {
                "Name": {
                    "shape": "Name",
                    "location": "uri",
                    "locationName": "Name"
                },
                "GroupId": {
                    "shape": "AccessorId",
                    "location": "uri",
                    "locationName": "GroupId"
                }
            }
        },
        "DisassociateProjectGroupResponse": {
            "type": "structure",
            "members": {
                "ProjectGroupAssociation": {
                    "shape": "ProjectGroupAssociation"
                }
            }
        },
        "DisplayName": {
            "type": "string",
            "max": 60,
            "min": 1,
            "pattern": "[p{L}p{N}p{P}p{Zs}]{1,60}",
            "sensitive": true
        },
        "Email": {
            "type": "string",
            "max": 254,
            "min": 3,
            "pattern": "S+@S+.S+",
            "sensitive": true
        },
        "ErrorMessage": {
            "type": "string"
        },
        "GetProjectAdminUserRequest": {
            "type": "structure",
            "required": [
                "Name",
                "UserId"
            ],
            "members": {
                "Name": {
                    "shape": "Name",
                    "location": "uri",
                    "locationName": "Name"
                },
                "UserId": {
                    "shape": "UserId",
                    "location": "uri",
                    "locationName": "UserId"
                }
            }
        },
        "GetProjectAdminUserResponse": {
            "type": "structure",
            "members": {
                "AdminUser": {
                    "shape": "AdminUser"
                }
            }
        },
        "GetProjectRequest": {
            "type": "structure",
            "required": [
                "Name"
            ],
            "members": {
                "Name": {
                    "shape": "Name",
                    "location": "uri",
                    "locationName": "Name"
                }
            }
        },
        "GetProjectResponse": {
            "type": "structure",
            "members": {
                "Project": {
                    "shape": "Project"
                }
            }
        },
        "InternalServerException": {
            "type": "structure",
            "members": {
                "Message": {
                    "shape": "ErrorMessage"
                }
            },
            "error": {
                "httpStatusCode": 500
            },
            "exception": true
        },
        "KMSConfiguration": {
            "type": "structure",
            "members": {
                "KeySelection": {
                    "shape": "KMSKeySelection"
                },
                "KeyId": {
                    "shape": "KmsKeyId"
                }
            }
        },
        "KMSKeySelection": {
            "type": "string",
            "enum": [
                "AMAZON_OWNED",
                "CUSTOMER_OWNED"
            ]
        },
        "KinesisDataExportConfiguration": {
            "type": "structure",
            "members": {
                "StreamArn": {
                    "shape": "Arn"
                },
                "SchemaVersion": {
                    "shape": "Version"
                }
            }
        },
        "KmsKeyId": {
            "type": "string",
            "max": 2048,
            "min": 1,
            "pattern": "^.*$"
        },
        "ListProjectAdminUsersRequest": {
            "type": "structure",
            "required": [
                "Name"
            ],
            "members": {
                "Name": {
                    "shape": "Name",
                    "location": "uri",
                    "locationName": "Name"
                },
                "NextToken": {
                    "shape": "Token",
                    "location": "querystring",
                    "locationName": "NextToken"
                },
                "MaxResults": {
                    "shape": "MaxResultsRequestRange",
                    "location": "querystring",
                    "locationName": "MaxResults"
                }
            }
        },
        "ListProjectAdminUsersResponse": {
            "type": "structure",
            "members": {
                "AdminUsers": {
                    "shape": "AdminUsersList"
                },
                "NextToken": {
                    "shape": "Token"
                }
            }
        },
        "ListProjectsRequest": {
            "type": "structure",
            "members": {
                "MaxResults": {
                    "shape": "MaxResultsRequestRange",
                    "location": "querystring",
                    "locationName": "MaxResults"
                },
                "NextToken": {
                    "shape": "Token",
                    "location": "querystring",
                    "locationName": "NextToken"
                }
            }
        },
        "ListProjectsResponse": {
            "type": "structure",
            "members": {
                "Projects": {
                    "shape": "ProjectList"
                },
                "NextToken": {
                    "shape": "Token"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "structure",
            "required": [
                "ResourceArn"
            ],
            "members": {
                "ResourceArn": {
                    "shape": "ProjectArn",
                    "location": "uri",
                    "locationName": "ResourceArn"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "structure",
            "members": {
                "Tags": {
                    "shape": "TagMap"
                }
            }
        },
        "LockServiceLinkedRoleRequest": {
            "type": "structure",
            "required": [
                "RoleArn",
                "Timeout"
            ],
            "members": {
                "RoleArn": {
                    "shape": "arnType"
                },
                "Timeout": {
                    "shape": "longType"
                }
            }
        },
        "LockServiceLinkedRoleResponse": {
            "type": "structure",
            "required": [
                "CanBeDeleted"
            ],
            "members": {
                "CanBeDeleted": {
                    "shape": "booleanType"
                },
                "ReasonOfFailure": {
                    "shape": "stringType"
                },
                "RelatedResources": {
                    "shape": "stringListType"
                }
            }
        },
        "MaxResultsRequestRange": {
            "type": "integer",
            "max": 50,
            "min": 0
        },
        "Name": {
            "type": "string",
            "max": 60,
            "min": 1,
            "pattern": "[0-9a-z-_]{1,60}"
        },
        "Project": {
            "type": "structure",
            "required": [
                "Name",
                "DisplayName",
                "Type",
                "ProjectLink"
            ],
            "members": {
                "Name": {
                    "shape": "Name"
                },
                "DisplayName": {
                    "shape": "DisplayName"
                },
                "Type": {
                    "shape": "ProjectType"
                },
                "ProjectLink": {
                    "shape": "String"
                },
                "DataExportConfiguration": {
                    "shape": "DataExportConfiguration"
                },
                "KMSConfiguration": {
                    "shape": "KMSConfiguration"
                },
                "Tags": {
                    "shape": "TagMap"
                },
                "UserPoolId": {
                    "shape": "String"
                },
                "UserPoolSource": {
                    "shape": "UserPoolSource"
                }
            }
        },
        "ProjectArn": {
            "type": "string",
            "max": 1600,
            "min": 13,
            "pattern": "^arn:aws:(thor|monitron):[A-Za-z0-9_/.-]{0,63}:[0-9]{12}:project/[a-z0-9-_]{1,60}$"
        },
        "ProjectGroupAssociation": {
            "type": "structure",
            "members": {
                "ProjectName": {
                    "shape": "Name"
                },
                "GroupId": {
                    "shape": "AccessorId"
                }
            }
        },
        "ProjectList": {
            "type": "list",
            "member": {
                "shape": "Project"
            }
        },
        "ProjectType": {
            "type": "string",
            "enum": [
                "ENTERPRISE",
                "STANDARD"
            ]
        },
        "ProjectUserAssociation": {
            "type": "structure",
            "members": {
                "ProjectName": {
                    "shape": "Name"
                },
                "UserId": {
                    "shape": "UserId"
                },
                "RoleName": {
                    "shape": "Name"
                }
            }
        },
        "ResourceNotFoundException": {
            "type": "structure",
            "members": {
                "Message": {
                    "shape": "ErrorMessage"
                }
            },
            "error": {
                "httpStatusCode": 404
            },
            "exception": true
        },
        "String": {
            "type": "string"
        },
        "TagKey": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$"
        },
        "TagKeyList": {
            "type": "list",
            "member": {
                "shape": "TagKey"
            },
            "max": 50,
            "min": 1
        },
        "TagMap": {
            "type": "map",
            "key": {
                "shape": "TagKey"
            },
            "value": {
                "shape": "TagValue"
            },
            "max": 50,
            "min": 1
        },
        "TagResourceRequest": {
            "type": "structure",
            "required": [
                "ResourceArn",
                "Tags"
            ],
            "members": {
                "ResourceArn": {
                    "shape": "ProjectArn",
                    "location": "uri",
                    "locationName": "ResourceArn"
                },
                "Tags": {
                    "shape": "TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "structure",
            "members": {}
        },
        "TagValue": {
            "type": "string",
            "max": 256,
            "pattern": ".{0,255}"
        },
        "Token": {
            "type": "string",
            "max": 512,
            "min": 4,
            "pattern": "[a-zA-Z0-9=/+_.-]{4,512}"
        },
        "UnlockServiceLinkedRoleRequest": {
            "type": "structure",
            "required": [
                "RoleArn"
            ],
            "members": {
                "RoleArn": {
                    "shape": "arnType"
                },
                "DeletionStatus": {
                    "shape": "deletionStatus"
                }
            }
        },
        "UnlockServiceLinkedRoleResponse": {
            "type": "structure",
            "members": {}
        },
        "UntagResourceRequest": {
            "type": "structure",
            "required": [
                "ResourceArn",
                "TagKeys"
            ],
            "members": {
                "ResourceArn": {
                    "shape": "ProjectArn",
                    "location": "uri",
                    "locationName": "ResourceArn"
                },
                "TagKeys": {
                    "shape": "TagKeyList",
                    "location": "querystring",
                    "locationName": "tagKeys"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "structure",
            "members": {}
        },
        "UpdateProjectRequest": {
            "type": "structure",
            "required": [
                "Name"
            ],
            "members": {
                "Name": {
                    "shape": "Name",
                    "location": "uri",
                    "locationName": "Name"
                },
                "DisplayName": {
                    "shape": "DisplayName"
                },
                "Type": {
                    "shape": "ProjectType"
                },
                "DataExportConfiguration": {
                    "shape": "DataExportConfiguration"
                },
                "RecreateKMSGrant": {
                    "shape": "Boolean"
                }
            }
        },
        "UpdateProjectResponse": {
            "type": "structure",
            "members": {
                "Project": {
                    "shape": "Project"
                }
            }
        },
        "UpdateUserPoolSourceRequest": {
            "type": "structure",
            "required": [
                "Name",
                "UserPoolSource"
            ],
            "members": {
                "Name": {
                    "shape": "Name",
                    "location": "uri",
                    "locationName": "Name"
                },
                "UserPoolSource": {
                    "shape": "UserPoolSource",
                    "location": "uri",
                    "locationName": "UserPoolSource"
                }
            }
        },
        "UpdateUserPoolSourceResponse": {
            "type": "structure",
            "members": {
                "Project": {
                    "shape": "Project"
                }
            }
        },
        "UserId": {
            "type": "string",
            "max": 256,
            "min": 1,
            "pattern": "[&w+-.@]+"
        },
        "UserName": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": "[p{L}p{M}p{S}p{N}p{P}]{1,128}"
        },
        "UserPoolSource": {
            "type": "string",
            "enum": [
                "GROUPS",
                "DIRECTORY"
            ]
        },
        "ValidationException": {
            "type": "structure",
            "members": {
                "Message": {
                    "shape": "ErrorMessage"
                }
            },
            "error": {
                "httpStatusCode": 400
            },
            "exception": true
        },
        "Version": {
            "type": "string",
            "max": 3,
            "min": 3,
            "pattern": "[1-9][.][0-9]"
        },
        "arnType": {
            "type": "string",
            "max": 2048,
            "min": 20
        },
        "booleanType": {
            "type": "boolean"
        },
        "deletionStatus": {
            "type": "string",
            "enum": [
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "longType": {
            "type": "long"
        },
        "stringListType": {
            "type": "list",
            "member": {
                "shape": "stringType"
            }
        },
        "stringType": {
            "type": "string"
        },
        "S5": {
            "type": "structure",
            "members": {
                "ProjectName": {},
                "UserId": {},
                "RoleName": {}
            }
        },
        "S9": {
            "type": "structure",
            "required": [
                "ProjectName",
                "GroupId"
            ],
            "members": {
                "ProjectName": {},
                "GroupId": {}
            }
        },
        "Sb": {
            "type": "string",
            "sensitive": true
        },
        "Sd": {
            "type": "map",
            "key": {},
            "value": {}
        },
        "Sj": {
            "type": "structure",
            "required": [
                "Name",
                "DisplayName",
                "Type",
                "ProjectLink"
            ],
            "members": {
                "Name": {},
                "DisplayName": {
                    "shape": "Sb"
                },
                "Type": {},
                "ProjectLink": {},
                "DataExportConfiguration": {
                    "shape": "Sl"
                },
                "KMSConfiguration": {
                    "type": "structure",
                    "members": {
                        "KeySelection": {},
                        "KeyId": {}
                    }
                },
                "Tags": {
                    "shape": "Sd"
                },
                "UserPoolId": {},
                "UserPoolSource": {}
            }
        },
        "Sl": {
            "type": "structure",
            "members": {
                "KinesisDataExportConfiguration": {
                    "type": "structure",
                    "members": {
                        "StreamArn": {},
                        "SchemaVersion": {}
                    }
                }
            }
        },
        "S11": {
            "type": "structure",
            "required": [
                "Id",
                "Name",
                "DisplayName",
                "Email"
            ],
            "members": {
                "Id": {},
                "Name": {},
                "DisplayName": {
                    "shape": "Sb"
                },
                "Email": {
                    "type": "string",
                    "sensitive": true
                }
            },
            "sensitive": true
        }
    }
}