{
    "version": "2.0",
    "metadata": {
        "apiVersion": "2020-04-09",
        "endpointPrefix": "lambdaconsole",
        "jsonVersion": "1.1",
        "protocol": "rest-json",
        "serviceFullName": "LambdaConsole",
        "serviceId": "lambdaConsole",
        "signatureVersion": "v4",
        "signingName": "lambdaconsole",
        "uid": "lambdaconsole-2020-04-09",
        "download_location": [
            "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
            "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
        ]
    },
    "operations": {
        "CorrectRelation": {
            "name": "CorrectRelation",
            "http": {
                "method": "PATCH",
                "requestUri": "/relations",
                "responseCode": 200
            },
            "input": {
                "shape": "CorrectRelationInput"
            },
            "output": {
                "shape": "CorrectRelationOutput"
            },
            "errors": [
                {
                    "shape": "VertexResourceNotFoundException"
                },
                {
                    "shape": "VertexValidationException"
                },
                {
                    "shape": "VertexInternalServerException"
                },
                {
                    "shape": "VertexAccessDeniedException"
                },
                {
                    "shape": "VertexConflictException"
                },
                {
                    "shape": "VertexThrottlingException"
                }
            ],
            "documentation": "<p>Corrects an exception returned by any of the relation APIs, such as <code>ListRelations</code>.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "CreateRelation": {
            "name": "CreateRelation",
            "http": {
                "method": "POST",
                "requestUri": "/relations",
                "responseCode": 200
            },
            "input": {
                "shape": "CreateRelationInput"
            },
            "output": {
                "shape": "CreateRelationOutput"
            },
            "errors": [
                {
                    "shape": "VertexValidationException"
                },
                {
                    "shape": "VertexInternalServerException"
                },
                {
                    "shape": "VertexAccessDeniedException"
                },
                {
                    "shape": "VertexConflictException"
                },
                {
                    "shape": "VertexThrottlingException"
                }
            ],
            "documentation": "<p>Creates a new relation of the specified type between the given source and target resources, and described by the given data.</p>",
            "idempotent": true,
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "DecryptIdeReadKey": {
            "name": "DecryptIdeReadKey",
            "http": {
                "method": "POST",
                "requestUri": "/ide/decrypt",
                "responseCode": 200
            },
            "input": {
                "shape": "DecryptIdeReadKeyInput"
            },
            "output": {
                "shape": "DecryptIdeReadKeyOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Decrypt an IDE read key.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "DeleteRelation": {
            "name": "DeleteRelation",
            "http": {
                "method": "POST",
                "requestUri": "/relations/delete",
                "responseCode": 200
            },
            "input": {
                "shape": "DeleteRelationInput"
            },
            "output": {
                "shape": "DeleteRelationOutput"
            },
            "errors": [
                {
                    "shape": "VertexResourceNotFoundException"
                },
                {
                    "shape": "VertexValidationException"
                },
                {
                    "shape": "VertexInternalServerException"
                },
                {
                    "shape": "VertexAccessDeniedException"
                },
                {
                    "shape": "VertexConflictException"
                },
                {
                    "shape": "VertexThrottlingException"
                }
            ],
            "documentation": "<p>Deletes the specified relation.</p>",
            "idempotent": true,
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "DeleteTestEvent": {
            "name": "DeleteTestEvent",
            "http": {
                "method": "DELETE",
                "requestUri": "/test-events/{testEventName}",
                "responseCode": 200
            },
            "input": {
                "shape": "DeleteTestEventInput"
            },
            "output": {
                "shape": "DeleteTestEventOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Delete a test event.</p>",
            "idempotent": true,
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "DescribeRole": {
            "name": "DescribeRole",
            "http": {
                "method": "POST",
                "requestUri": "/role",
                "responseCode": 200
            },
            "input": {
                "shape": "DescribeRoleInput"
            },
            "output": {
                "shape": "DescribeRoleOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Describe an IAM role.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "DescribeStack": {
            "name": "DescribeStack",
            "http": {
                "method": "POST",
                "requestUri": "/stack",
                "responseCode": 200
            },
            "input": {
                "shape": "DescribeStackInput"
            },
            "output": {
                "shape": "DescribeStackOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Describe a CloudFormation stack.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "EncryptIdeWriteKey": {
            "name": "EncryptIdeWriteKey",
            "http": {
                "method": "POST",
                "requestUri": "/ide/encrypt",
                "responseCode": 200
            },
            "input": {
                "shape": "EncryptIdeWriteKeyInput"
            },
            "output": {
                "shape": "EncryptIdeWriteKeyOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Encrypt an IDE write key.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "GetBlueprint": {
            "name": "GetBlueprint",
            "http": {
                "method": "GET",
                "requestUri": "/blueprints/{blueprintName}",
                "responseCode": 200
            },
            "input": {
                "shape": "GetBlueprintInput"
            },
            "output": {
                "shape": "GetBlueprintOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Get a blueprint.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "GetIdeDataMergeUrl": {
            "name": "GetIdeDataMergeUrl",
            "http": {
                "method": "GET",
                "requestUri": "/ide/merge",
                "responseCode": 200
            },
            "output": {
                "shape": "GetIdeDataMergeUrlOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Get a URL to upload un-deployed data from an IDE session for a subsequent merge.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "GetNode": {
            "name": "GetNode",
            "http": {
                "method": "GET",
                "requestUri": "/nodes/{nodeId}",
                "responseCode": 200
            },
            "input": {
                "shape": "GetNodeInput"
            },
            "output": {
                "shape": "GetNodeOutput"
            },
            "errors": [
                {
                    "shape": "VertexResourceNotFoundException"
                },
                {
                    "shape": "VertexValidationException"
                },
                {
                    "shape": "VertexInternalServerException"
                },
                {
                    "shape": "VertexThrottlingException"
                }
            ],
            "documentation": "<p>Returns the definition for the specified node identifier.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "GetServiceData": {
            "name": "GetServiceData",
            "http": {
                "method": "POST",
                "requestUri": "/service-data",
                "responseCode": 200
            },
            "input": {
                "shape": "GetServiceDataInput"
            },
            "output": {
                "shape": "GetServiceDataOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Get AWS service data for one or more identifiers.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "GetTestEvent": {
            "name": "GetTestEvent",
            "http": {
                "method": "GET",
                "requestUri": "/test-events/{testEventName}",
                "responseCode": 200
            },
            "input": {
                "shape": "GetTestEventInput"
            },
            "output": {
                "shape": "GetTestEventOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Get a test event.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "GetUserData": {
            "name": "GetUserData",
            "http": {
                "method": "GET",
                "requestUri": "/user-data",
                "responseCode": 200
            },
            "output": {
                "shape": "GetUserDataOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Get data about the calling user.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "InvokeNodeAction": {
            "name": "InvokeNodeAction",
            "http": {
                "method": "POST",
                "requestUri": "/nodes/{nodeId}/actions/{action}",
                "responseCode": 200
            },
            "input": {
                "shape": "InvokeNodeActionInput"
            },
            "output": {
                "shape": "InvokeNodeActionOutput"
            },
            "errors": [
                {
                    "shape": "VertexResourceNotFoundException"
                },
                {
                    "shape": "VertexValidationException"
                },
                {
                    "shape": "VertexInternalServerException"
                },
                {
                    "shape": "VertexAccessDeniedException"
                },
                {
                    "shape": "VertexConflictException"
                },
                {
                    "shape": "VertexThrottlingException"
                }
            ],
            "documentation": "<p>Invokes a custom action defined by a node.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ListAwsVendedLayerVersions": {
            "name": "ListAwsVendedLayerVersions",
            "http": {
                "method": "GET",
                "requestUri": "/aws-vended-layers/{layerArn}/versions",
                "responseCode": 200
            },
            "input": {
                "shape": "ListAwsVendedLayerVersionsInput"
            },
            "output": {
                "shape": "ListAwsVendedLayerVersionsOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>List AWS vended layer versions.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ListAwsVendedLayers": {
            "name": "ListAwsVendedLayers",
            "http": {
                "method": "GET",
                "requestUri": "/aws-vended-layers",
                "responseCode": 200
            },
            "input": {
                "shape": "ListAwsVendedLayersInput"
            },
            "output": {
                "shape": "ListAwsVendedLayersOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>List AWS vended layers.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ListBlueprints": {
            "name": "ListBlueprints",
            "http": {
                "method": "GET",
                "requestUri": "/blueprints",
                "responseCode": 200
            },
            "input": {
                "shape": "ListBlueprintsInput"
            },
            "output": {
                "shape": "ListBlueprintsOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>List blueprints.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ListEzcrcPolicyTemplates": {
            "name": "ListEzcrcPolicyTemplates",
            "http": {
                "method": "GET",
                "requestUri": "/ezcrc-policy-templates",
                "responseCode": 200
            },
            "input": {
                "shape": "ListEzcrcPolicyTemplatesInput"
            },
            "output": {
                "shape": "ListEzcrcPolicyTemplatesOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>List eZCRC policy templates.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ListMotds": {
            "name": "ListMotds",
            "http": {
                "method": "GET",
                "requestUri": "/motds",
                "responseCode": 200
            },
            "input": {
                "shape": "ListMotdsInput"
            },
            "output": {
                "shape": "ListMotdsOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>List MOTDs.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ListNodes": {
            "name": "ListNodes",
            "http": {
                "method": "GET",
                "requestUri": "/nodes",
                "responseCode": 200
            },
            "input": {
                "shape": "ListNodesInput"
            },
            "output": {
                "shape": "ListNodesOutput"
            },
            "errors": [
                {
                    "shape": "VertexResourceNotFoundException"
                },
                {
                    "shape": "VertexValidationException"
                },
                {
                    "shape": "VertexInternalServerException"
                },
                {
                    "shape": "VertexThrottlingException"
                }
            ],
            "documentation": "<p>Returns a list of nodes that Vertex knows about. For each node, the response includes the full node definition.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ListRelations": {
            "name": "ListRelations",
            "http": {
                "method": "GET",
                "requestUri": "/relations",
                "responseCode": 200
            },
            "input": {
                "shape": "ListRelationsInput"
            },
            "output": {
                "shape": "ListRelationsOutput"
            },
            "errors": [
                {
                    "shape": "VertexValidationException"
                },
                {
                    "shape": "VertexInternalServerException"
                },
                {
                    "shape": "VertexAccessDeniedException"
                },
                {
                    "shape": "VertexThrottlingException"
                }
            ],
            "documentation": "<p>Returns a list of relations.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ListSampleEvents": {
            "name": "ListSampleEvents",
            "http": {
                "method": "GET",
                "requestUri": "/sample-events",
                "responseCode": 200
            },
            "input": {
                "shape": "ListSampleEventsInput"
            },
            "output": {
                "shape": "ListSampleEventsOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>List sample events.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ListTestEvents": {
            "name": "ListTestEvents",
            "http": {
                "method": "GET",
                "requestUri": "/test-events",
                "responseCode": 200
            },
            "input": {
                "shape": "ListTestEventsInput"
            },
            "output": {
                "shape": "ListTestEventsOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>List test events.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "MergeIdeData": {
            "name": "MergeIdeData",
            "http": {
                "method": "POST",
                "requestUri": "/ide/merge",
                "responseCode": 200
            },
            "input": {
                "shape": "MergeIdeDataInput"
            },
            "output": {
                "shape": "MergeIdeDataOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Merge un-deployed data from an IDE session into its remote project.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "PutTestEvent": {
            "name": "PutTestEvent",
            "http": {
                "method": "PUT",
                "requestUri": "/test-events/{testEventName}",
                "responseCode": 200
            },
            "input": {
                "shape": "PutTestEventInput"
            },
            "output": {
                "shape": "PutTestEventOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ConflictException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Put a test event.</p>",
            "idempotent": true,
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ReportApplication": {
            "name": "ReportApplication",
            "http": {
                "method": "PUT",
                "requestUri": "/applications/{applicationId}/report",
                "responseCode": 200
            },
            "input": {
                "shape": "ReportApplicationInput"
            },
            "output": {
                "shape": "ReportApplicationOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Report a SAR application.</p>",
            "idempotent": true,
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "SearchApplications": {
            "name": "SearchApplications",
            "http": {
                "method": "POST",
                "requestUri": "/applications",
                "responseCode": 200
            },
            "input": {
                "shape": "SearchApplicationsInput"
            },
            "output": {
                "shape": "SearchApplicationsOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>Search for SAR applications.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "UpdateRelation": {
            "name": "UpdateRelation",
            "http": {
                "method": "PUT",
                "requestUri": "/relations",
                "responseCode": 200
            },
            "input": {
                "shape": "UpdateRelationInput"
            },
            "output": {
                "shape": "UpdateRelationOutput"
            },
            "errors": [
                {
                    "shape": "VertexResourceNotFoundException"
                },
                {
                    "shape": "VertexValidationException"
                },
                {
                    "shape": "VertexInternalServerException"
                },
                {
                    "shape": "VertexAccessDeniedException"
                },
                {
                    "shape": "VertexConflictException"
                },
                {
                    "shape": "VertexThrottlingException"
                }
            ],
            "documentation": "<p>Updates the specified relation using the data provided in the request. Provide only the parameters that should be changed.</p>",
            "idempotent": true,
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/KQ3UA444NKXNFWNKEKHOTPOZ6SBBMAHG2GQGZC6C7LQJRM3OG5NQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        },
        "ListRuntimes": {
            "name": "ListRuntimes",
            "http": {
                "method": "GET",
                "requestUri": "/runtimes",
                "responseCode": 200
            },
            "input": {
                "shape": "ListRuntimesInput"
            },
            "output": {
                "shape": "ListRuntimesOutput"
            },
            "errors": [
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "InternalServerException"
                }
            ],
            "documentation": "<p>List runtimes.</p>",
            "download_location": [
                "https://c.d.cdn.console.awsstatic.com/a/v1/PU2EVSHBV5O2HF4B6FUC7TAT4WZ3GDIJVGA4FKS6U7YLU6O24ZFQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/KL6OWAGQINVKIKXG2G3BC4YH6SGMD3CCSWKKAWGUOQL5SQHM3UHQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/R4NLUOIXDNFQSW7NK62NFKLHN2O7B42ABPRKBUHGRNHX5O3IA54A/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/QQQCW7R7RTBJZQFD3VN7F2TVP3ZET6AZLLODFHCTDGBL7D7AXQ6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/V2ADRMQ2KRZFANV2267P42B2JGZN7H4T55VKOPS77EYFVX2TNRCA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/VKEAJUKBSHMRFABIJPDB36AEBFEV6TVJDQWTSV6HNTJYLZ64CNKA/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/636C6XYKBPIYH2VG4J5FZDSCDWTVD4V4QHZOBOTPLRF6BABYTFUQ/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/5BUNOZO4OKXZSNMU6C5WXKKMOBWGXO3J4CUWTTPMHJCVP4PPFG6Q/index.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/DEEOP2UDHKJJV5HMQLGTELKTXDSNVEAFWQKTIOKVYWHJRY2T4H7Q/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/53Z5GCVWPKQRYJXM5OV5TSH7B4LK6XLRWWOLQG3MFCBKYJIVIWWQ/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/526ALNWE6S6U6GXV37VUQGICJV53YA356273IKHQUARSIVC6OBJA/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/FPKKFDBCD5XGKTNWQD7AKYOCOPQZDKBOMM2ZBO6K6OXORTD6NC5A/vendors.sdk.js",
                "https://c.d.cdn.console.awsstatic.com/a/v1/4HXFYBYDM3WDYMWB7J6UMRQ3KEPSX5GZKGPTJ7QFRDLTMNVPLMQA/vendors.sdk.js"
            ]
        }
    },
    "shapes": {
        "AccessDeniedException": {
            "type": "structure",
            "required": [
                "message"
            ],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "error": {
                "httpStatusCode": 403,
                "senderFault": true
            },
            "exception": true
        },
        "AccountId": {
            "type": "string",
            "pattern": "^d{12}$"
        },
        "AccountLimit": {
            "type": "structure",
            "members": {
                "codeSizeUnzipped": {
                    "shape": "Long",
                    "documentation": "<p>The maximum size of a function's deployment package and layers when they're extracted.</p>"
                },
                "codeSizeZipped": {
                    "shape": "Long",
                    "documentation": "<p>The maximum size of a deployment package when it's uploaded directly to AWS Lambda. Use Amazon S3 for larger files.</p>"
                },
                "concurrentExecutions": {
                    "shape": "Integer",
                    "documentation": "<p>The maximum number of simultaneous function executions.</p>"
                },
                "totalCodeSize": {
                    "shape": "Long",
                    "documentation": "<p>The amount of storage space that you can use for all deployment packages and layer archives.</p>"
                },
                "unreservedConcurrentExecutions": {
                    "shape": "UnreservedConcurrentExecutions",
                    "documentation": "<p>The maximum number of simultaneous function executions, minus the capacity that's reserved for individual functions with PutFunctionConcurrency.</p>"
                },
                "unreservedConcurrentExecutionsMinimum": {
                    "shape": "UnreservedConcurrentExecutionsMinimum",
                    "documentation": "<p>The minimum number of simultaneous function executions that may remain after reserving capacity with PutFunctionConcurrency.</p>"
                }
            }
        },
        "AccountUsage": {
            "type": "structure",
            "members": {
                "functionCount": {
                    "shape": "Long",
                    "documentation": "<p>The number of Lambda functions.</p>"
                },
                "totalCodeSize": {
                    "shape": "Long",
                    "documentation": "<p>The amount of storage space, in bytes, that's being used by deployment packages and layer archives.</p>"
                }
            }
        },
        "ApplicationCapabilities": {
            "type": "list",
            "member": {
                "shape": "String"
            }
        },
        "ApplicationItem": {
            "type": "structure",
            "members": {
                "deploymentCount": {
                    "shape": "Integer"
                },
                "description": {
                    "shape": "String"
                },
                "homePageUrl": {
                    "shape": "String"
                },
                "id": {
                    "shape": "String"
                },
                "isSharedWithOrganization": {
                    "shape": "Boolean"
                },
                "isVerifiedAuthor": {
                    "shape": "Boolean"
                },
                "labels": {
                    "shape": "ApplicationLabels"
                },
                "name": {
                    "shape": "String"
                },
                "publisherAlias": {
                    "shape": "String"
                },
                "readmeUrl": {
                    "shape": "String"
                },
                "requiredCapabilitiesForLatestVersion": {
                    "shape": "ApplicationCapabilities"
                },
                "spdxLicenseId": {
                    "shape": "String"
                },
                "verifiedAuthorUrl": {
                    "shape": "String"
                }
            }
        },
        "ApplicationLabels": {
            "type": "list",
            "member": {
                "shape": "String"
            }
        },
        "ApplicationsList": {
            "type": "list",
            "member": {
                "shape": "ApplicationItem"
            }
        },
        "BlueprintItem": {
            "type": "structure",
            "required": [
                "blueprintName",
                "codeHash",
                "codeLocation",
                "configuration",
                "version"
            ],
            "members": {
                "blueprintName": {
                    "shape": "BlueprintName",
                    "documentation": "<p>Unique name of the blueprint.</p>"
                },
                "codeHash": {
                    "shape": "String",
                    "documentation": "<p>SHA-256 hash of the blueprint's code.</p>"
                },
                "codeLocation": {
                    "shape": "String",
                    "documentation": "<p>S3 URL of the blueprint's built code .zip.</p>"
                },
                "configuration": {
                    "shape": "String",
                    "documentation": "<p>JSON-encoded configuration of the blueprint.</p>"
                },
                "preview": {
                    "shape": "String",
                    "documentation": "<p>Alias of a feature gate controlling whether the blueprint is in preview.</p>"
                },
                "version": {
                    "shape": "String",
                    "documentation": "<p>The blueprint's version.</p>"
                }
            }
        },
        "BlueprintName": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": "^[0-9a-z]([0-9a-z-]*[0-9a-z])?$"
        },
        "Blueprints": {
            "type": "list",
            "member": {
                "shape": "BlueprintName"
            },
            "max": 50,
            "min": 0
        },
        "BlueprintsList": {
            "type": "list",
            "member": {
                "shape": "BlueprintItem"
            }
        },
        "Boolean": {
            "type": "boolean",
            "box": true
        },
        "CompatibleRuntimes": {
            "type": "list",
            "member": {
                "shape": "String"
            },
            "max": 5,
            "min": 0
        },
        "ConflictException": {
            "type": "structure",
            "required": [
                "message"
            ],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "error": {
                "httpStatusCode": 409,
                "senderFault": true
            },
            "exception": true
        },
        "CorrectRelationInput": {
            "type": "structure",
            "required": [
                "exception",
                "type"
            ],
            "members": {
                "data": {
                    "shape": "String",
                    "documentation": "<p>Arbitrary JSON data associated with the relation. The data must provide enough information to uniquely identify the relation to correct.</p>"
                },
                "exception": {
                    "shape": "RelationException",
                    "documentation": "<p>The exception to correct. Its <code>Correctable</code> attribute must be true.</p>"
                },
                "source": {
                    "shape": "ResourceId",
                    "documentation": "<p>Identifier of the source of the relation to correct.</p>"
                },
                "target": {
                    "shape": "ResourceId",
                    "documentation": "<p>Identifier of the target of the relation to correct.</p>"
                },
                "type": {
                    "shape": "RelationshipType",
                    "documentation": "<p>The relationship type of the relation to correct.</p>"
                }
            }
        },
        "CorrectRelationOutput": {
            "type": "structure",
            "members": {
                "relation": {
                    "shape": "RelationObject",
                    "documentation": "<p>The relation that was corrected, possibly containing a <code>RelationException</code> if errors occurred.</p>"
                }
            }
        },
        "CreateRelationInput": {
            "type": "structure",
            "required": [
                "source",
                "target",
                "type"
            ],
            "members": {
                "data": {
                    "shape": "String",
                    "documentation": "<p>Arbitrary JSON data associated with the relation.</p>"
                },
                "source": {
                    "shape": "ResourceId",
                    "documentation": "<p>Identifier of the source of the relation to create.</p>"
                },
                "target": {
                    "shape": "ResourceId",
                    "documentation": "<p>Identifier of the target of the relation to create.</p>"
                },
                "type": {
                    "shape": "RelationshipType",
                    "documentation": "<p>The relationship type of the relation to create.</p>"
                }
            }
        },
        "CreateRelationOutput": {
            "type": "structure",
            "members": {
                "relation": {
                    "shape": "RelationObject",
                    "documentation": "<p>The relation that was created, possibly containing a <code>RelationException</code> if errors occurred.</p>"
                }
            }
        },
        "DecryptIdeReadKeyInput": {
            "type": "structure",
            "required": [
                "readKey"
            ],
            "members": {
                "readKey": {
                    "shape": "String",
                    "documentation": "<p>The read key to decrypt.</p>"
                }
            }
        },
        "DecryptIdeReadKeyOutput": {
            "type": "structure",
            "required": [
                "readKey"
            ],
            "members": {
                "readKey": {
                    "shape": "String",
                    "documentation": "<p>The decrypted read key.</p>"
                }
            }
        },
        "DeleteRelationInput": {
            "type": "structure",
            "required": [
                "source",
                "target",
                "type"
            ],
            "members": {
                "data": {
                    "shape": "String",
                    "documentation": "<p>Arbitrary JSON data associated with the relation. The data must provide enough information to uniquely identify the relation to delete.</p>"
                },
                "source": {
                    "shape": "ResourceId",
                    "documentation": "<p>Identifier of the source of the relation to delete.</p>"
                },
                "target": {
                    "shape": "ResourceId",
                    "documentation": "<p>Identifier of the target of the relation to delete.</p>"
                },
                "type": {
                    "shape": "RelationshipType",
                    "documentation": "<p>The relationship type of the relation to delete.</p>"
                }
            }
        },
        "DeleteRelationOutput": {
            "type": "structure",
            "members": {
                "relation": {
                    "shape": "RelationObject",
                    "documentation": "<p>The relation that was deleted, possibly containing a <code>RelationException</code> if errors occurred.</p>"
                }
            }
        },
        "DeleteTestEventInput": {
            "type": "structure",
            "required": [
                "functionName",
                "testEventName"
            ],
            "members": {
                "functionName": {
                    "shape": "FunctionName",
                    "documentation": "<p>Name of the function the test event belongs to.</p>",
                    "location": "querystring",
                    "locationName": "functionName"
                },
                "testEventName": {
                    "shape": "TestEventName",
                    "documentation": "<p>Name of the test event to delete.</p>",
                    "location": "uri",
                    "locationName": "testEventName"
                }
            }
        },
        "DeleteTestEventOutput": {
            "type": "structure",
            "required": [
                "testEvent"
            ],
            "members": {
                "testEvent": {
                    "shape": "TestEventDescription",
                    "documentation": "<p>The test event that was deleted.</p>"
                }
            }
        },
        "DescribeRoleInput": {
            "type": "structure",
            "required": [
                "roleName"
            ],
            "members": {
                "roleName": {
                    "shape": "RoleName",
                    "documentation": "<p>Name of the role to describe.</p>"
                }
            }
        },
        "DescribeRoleOutput": {
            "type": "structure",
            "required": [
                "policies",
                "resources",
                "roleName",
                "trustedEntities"
            ],
            "members": {
                "partial": {
                    "shape": "Boolean",
                    "documentation": "<p>Whether the response includes only some of the policies and resources on the role.</p>"
                },
                "permissionsBoundary": {
                    "shape": "PermissionsBoundary",
                    "documentation": "<p>The role's optional permissions boundary.</p>"
                },
                "policies": {
                    "shape": "Policies",
                    "documentation": "<p>A list of inline and managed policies on the role.</p>"
                },
                "resources": {
                    "shape": "Resources",
                    "documentation": "<p>Parsed AWS resources from the role's policies.</p>"
                },
                "roleName": {
                    "shape": "RoleName",
                    "documentation": "<p>Name of the role that was described.</p>"
                },
                "trustedEntities": {
                    "shape": "TrustedEntities",
                    "documentation": "<p>A list of entities that this role trusts.</p>"
                }
            }
        },
        "DescribeStackInput": {
            "type": "structure",
            "required": [
                "stackArn"
            ],
            "members": {
                "stackArn": {
                    "shape": "StackArn",
                    "documentation": "<p>ARN of the stack to describe.</p>"
                }
            }
        },
        "DescribeStackOutput": {
            "type": "structure",
            "required": [
                "details",
                "links",
                "resources"
            ],
            "members": {
                "details": {
                    "shape": "String",
                    "documentation": "<p>JSON-encoded configuration of the stack as returned by cloudformation:DescribeStacks. If available, the original template of the stack will also be returned as the <code>originalTemplate</code> property.</p>"
                },
                "links": {
                    "shape": "StackLinks",
                    "documentation": "<p>Relative AWS console links for resources in the stack.</p>"
                },
                "resources": {
                    "shape": "StackResources",
                    "documentation": "<p>List of JSON-encoded configurations of resources in the stack. If possible, each resource will also contain a <code>template</code> property that is its corresponding definition in the stack's template.</p>"
                }
            }
        },
        "Description": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "Effect": {
            "type": "string",
            "enum": [
                "Allow",
                "Deny"
            ]
        },
        "EncryptIdeWriteKeyInput": {
            "type": "structure",
            "required": [
                "writeKey"
            ],
            "members": {
                "writeKey": {
                    "shape": "String",
                    "documentation": "<p>The write key to encrypt.</p>"
                }
            }
        },
        "EncryptIdeWriteKeyOutput": {
            "type": "structure",
            "required": [
                "writeKey"
            ],
            "members": {
                "writeKey": {
                    "shape": "String",
                    "documentation": "<p>The encrypted write key.</p>"
                }
            }
        },
        "ExceptionLevel": {
            "type": "string",
            "enum": [
                "info",
                "warning",
                "error",
                "fatal"
            ]
        },
        "ExceptionsList": {
            "type": "list",
            "member": {
                "shape": "RelationException"
            }
        },
        "Feature": {
            "type": "structure",
            "required": [
                "alias",
                "gated",
                "name"
            ],
            "members": {
                "alias": {
                    "shape": "String",
                    "documentation": "<p>Alias of the feature for use by clients.</p>"
                },
                "gated": {
                    "shape": "Boolean",
                    "documentation": "<p>Whether the feature is currently gated.</p>"
                },
                "name": {
                    "shape": "String",
                    "documentation": "<p>Name of the feature.</p>"
                },
                "percentage": {
                    "shape": "Percentage",
                    "documentation": "<p>An optional dialup percentage for a gated feature.</p>"
                }
            }
        },
        "FeatureDetails": {
            "type": "map",
            "key": {
                "shape": "String"
            },
            "value": {
                "shape": "Feature"
            }
        },
        "Features": {
            "type": "list",
            "member": {
                "shape": "String"
            }
        },
        "FunctionArn": {
            "type": "string",
            "pattern": "^arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:d{12}:function:[a-zA-Z0-9-_.]+(:($LATEST|[a-zA-Z0-9-_]+))?$"
        },
        "FunctionName": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": "^[a-zA-Z0-9-_.]+$"
        },
        "GetBlueprintInput": {
            "type": "structure",
            "required": [
                "blueprintName"
            ],
            "members": {
                "blueprintName": {
                    "shape": "BlueprintName",
                    "documentation": "<p>Name of the blueprint to get.</p>",
                    "location": "uri",
                    "locationName": "blueprintName"
                }
            }
        },
        "GetBlueprintOutput": {
            "type": "structure",
            "required": [
                "blueprint",
                "code"
            ],
            "members": {
                "blueprint": {
                    "shape": "BlueprintItem",
                    "documentation": "<p>Information about the blueprint, including its configuration.</p>"
                },
                "code": {
                    "shape": "String",
                    "documentation": "<p>Base64-encoded code .zip of the blueprint.</p>"
                }
            }
        },
        "GetIdeDataMergeUrlOutput": {
            "type": "structure",
            "required": [
                "key",
                "url"
            ],
            "members": {
                "key": {
                    "shape": "String",
                    "documentation": "<p>Unique identifier of the merge data.</p>"
                },
                "url": {
                    "shape": "String",
                    "documentation": "<p>URL to upload merge data to.</p>"
                }
            }
        },
        "GetNodeInput": {
            "type": "structure",
            "required": [
                "nodeId"
            ],
            "members": {
                "nodeId": {
                    "shape": "NodeId",
                    "documentation": "<p>The identifier of the node to get.</p>",
                    "location": "uri",
                    "locationName": "nodeId"
                }
            }
        },
        "GetNodeOutput": {
            "type": "structure",
            "members": {
                "node": {
                    "shape": "NodeDefinition",
                    "documentation": "<p>The node definition.</p>"
                }
            }
        },
        "GetServiceDataInput": {
            "type": "structure",
            "required": [
                "identifiers"
            ],
            "members": {
                "identifiers": {
                    "shape": "Identifiers",
                    "documentation": "<p>List of identifiers to get service data for.</p>"
                }
            }
        },
        "GetServiceDataOutput": {
            "type": "structure",
            "required": [
                "data"
            ],
            "members": {
                "data": {
                    "shape": "ServiceData",
                    "documentation": "<p>Service data for the provided identifiers.</p>"
                }
            }
        },
        "GetTestEventInput": {
            "type": "structure",
            "required": [
                "functionName",
                "testEventName"
            ],
            "members": {
                "functionName": {
                    "shape": "FunctionName",
                    "documentation": "<p>Name of the function the test event belongs to.</p>",
                    "location": "querystring",
                    "locationName": "functionName"
                },
                "testEventName": {
                    "shape": "TestEventName",
                    "documentation": "<p>Name of the test event to get.</p>",
                    "location": "uri",
                    "locationName": "testEventName"
                }
            }
        },
        "GetTestEventOutput": {
            "type": "structure",
            "required": [
                "testEvent"
            ],
            "members": {
                "testEvent": {
                    "shape": "TestEventDescription",
                    "documentation": "<p>The test event.</p>"
                }
            }
        },
        "GetUserDataOutput": {
            "type": "structure",
            "required": [
                "accountId",
                "features",
                "hasFunctions",
                "id",
                "settings"
            ],
            "members": {
                "accountId": {
                    "shape": "AccountId",
                    "documentation": "<p>AWS account ID of the user.</p>"
                },
                "featureDetails": {
                    "shape": "FeatureDetails",
                    "documentation": "<p>In development environments, full details about available features.</p>"
                },
                "features": {
                    "shape": "Features",
                    "documentation": "<p>Features that the user has access to.</p>"
                },
                "hasFunctions": {
                    "shape": "Boolean",
                    "documentation": "<p>Whether the user has any Lambda functions.</p>"
                },
                "id": {
                    "shape": "UserId",
                    "documentation": "<p>Unique ID representing the user.</p>"
                },
                "settings": {
                    "shape": "UserSettings",
                    "documentation": "<p>Account-level settings for the user.</p>"
                }
            }
        },
        "Identifiers": {
            "type": "list",
            "member": {
                "shape": "String"
            },
            "max": 100,
            "min": 1
        },
        "Integer": {
            "type": "integer",
            "box": true
        },
        "InternalServerException": {
            "type": "structure",
            "required": [
                "message"
            ],
            "members": {
                "message": {
                    "shape": "String"
                },
                "retryAfterSeconds": {
                    "shape": "Integer",
                    "location": "header",
                    "locationName": "Retry-After"
                }
            },
            "error": {
                "httpStatusCode": 500
            },
            "exception": true,
            "fault": true,
            "retryable": {
                "throttling": false
            }
        },
        "InvokeNodeActionInput": {
            "type": "structure",
            "required": [
                "action",
                "nodeId"
            ],
            "members": {
                "action": {
                    "shape": "String",
                    "documentation": "<p>Name of the action that should be invoked.</p>",
                    "location": "uri",
                    "locationName": "action"
                },
                "nodeId": {
                    "shape": "NodeId",
                    "documentation": "<p>The identifier of the node implementing the action to invoke.</p>",
                    "location": "uri",
                    "locationName": "nodeId"
                },
                "payload": {
                    "shape": "String",
                    "documentation": "<p>Arbitrary JSON payload to pass to the action to invoke.</p>"
                }
            }
        },
        "InvokeNodeActionOutput": {
            "type": "structure",
            "members": {
                "payload": {
                    "shape": "String",
                    "documentation": "<p>Arbitrary JSON response from the action that was invoked.</p>"
                }
            }
        },
        "LambdaProperties": {
            "type": "structure",
            "required": [
                "functionArn"
            ],
            "members": {
                "functionArn": {
                    "shape": "FunctionArn",
                    "documentation": "<p>ARN of the function being edited.</p>"
                }
            }
        },
        "LayerArn": {
            "type": "string",
            "max": 140,
            "min": 1,
            "pattern": "^arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:d{12}:layer:[a-zA-Z0-9-_]+$"
        },
        "LayerItem": {
            "type": "structure",
            "required": [
                "latestMatchingVersion",
                "layerArn",
                "layerName"
            ],
            "members": {
                "latestMatchingVersion": {
                    "shape": "LayerVersionItem",
                    "documentation": "<p>A reference to the latest (highest numbered) version of this layer.</p>"
                },
                "layerArn": {
                    "shape": "LayerArn",
                    "documentation": "<p>ARN of the layer.</p>"
                },
                "layerName": {
                    "shape": "LayerName",
                    "documentation": "<p>Name of the layer.</p>"
                }
            }
        },
        "LayerName": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": "^[a-zA-Z0-9-_]+$"
        },
        "LayerVersionArn": {
            "type": "string",
            "max": 140,
            "min": 1,
            "pattern": "^arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+$"
        },
        "LayerVersionItem": {
            "type": "structure",
            "required": [
                "layerVersionArn",
                "version"
            ],
            "members": {
                "compatibleRuntimes": {
                    "shape": "CompatibleRuntimes",
                    "documentation": "<p>A list of function runtimes that this layer version can be used with.</p>"
                },
                "createdDate": {
                    "shape": "Timestamp",
                    "documentation": "<p>When the layer version was first created.</p>"
                },
                "description": {
                    "shape": "Description",
                    "documentation": "<p>Description for the layer version.</p>"
                },
                "layerVersionArn": {
                    "shape": "LayerVersionArn",
                    "documentation": "<p>ARN of the layer version.</p>"
                },
                "licenseInfo": {
                    "shape": "LicenseInfo",
                    "documentation": "<p>The layer version's software license.</p>"
                },
                "version": {
                    "shape": "Long",
                    "documentation": "<p>The layer version's version number.</p>"
                }
            }
        },
        "LayerVersionsList": {
            "type": "list",
            "member": {
                "shape": "LayerVersionItem"
            }
        },
        "LayersList": {
            "type": "list",
            "member": {
                "shape": "LayerItem"
            }
        },
        "LicenseInfo": {
            "type": "string",
            "max": 512,
            "min": 1
        },
        "ListAwsVendedLayerVersionsInput": {
            "type": "structure",
            "required": [
                "layerArn"
            ],
            "members": {
                "layerArn": {
                    "shape": "LayerArn",
                    "documentation": "<p>ARN of the layer to list versions for.</p>",
                    "location": "uri",
                    "locationName": "layerArn"
                },
                "maxResults": {
                    "shape": "MaxResults",
                    "documentation": "<p>The total number of items to return in the response. If the total number of items available is more than the value specified, a <code>nextToken</code> is provided in the response. To resume pagination, provide the <code>nextToken</code> value in a subsequent request.</p>",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This is the <code>nextToken</code> from a previously truncated response.</p>",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListAwsVendedLayerVersionsOutput": {
            "type": "structure",
            "required": [
                "layerVersions"
            ],
            "members": {
                "layerVersions": {
                    "shape": "LayerVersionsList",
                    "documentation": "<p>List of layer versions.</p>"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This can be provided in a subsequent request to resume pagination.</p>"
                }
            }
        },
        "ListAwsVendedLayersInput": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "MaxResults",
                    "documentation": "<p>The total number of items to return in the response. If the total number of items available is more than the value specified, a <code>nextToken</code> is provided in the response. To resume pagination, provide the <code>nextToken</code> value in a subsequent request.</p>",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This is the <code>nextToken</code> from a previously truncated response.</p>",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListAwsVendedLayersOutput": {
            "type": "structure",
            "required": [
                "layers"
            ],
            "members": {
                "layers": {
                    "shape": "LayersList",
                    "documentation": "<p>List of layers.</p>"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This can be provided in a subsequent request to resume pagination.</p>"
                }
            }
        },
        "ListBlueprintsInput": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "MaxResults",
                    "documentation": "<p>The total number of items to return in the response. If the total number of items available is more than the value specified, a <code>nextToken</code> is provided in the response. To resume pagination, provide the <code>nextToken</code> value in a subsequent request.</p>",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This is the <code>nextToken</code> from a previously truncated response.</p>",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListBlueprintsOutput": {
            "type": "structure",
            "required": [
                "blueprints"
            ],
            "members": {
                "blueprints": {
                    "shape": "BlueprintsList",
                    "documentation": "<p>List of blueprints.</p>"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This can be provided in a subsequent request to resume pagination.</p>"
                }
            }
        },
        "ListEzcrcPolicyTemplatesInput": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "MaxResults",
                    "documentation": "<p>The total number of items to return in the response. If the total number of items available is more than the value specified, a <code>nextToken</code> is provided in the response. To resume pagination, provide the <code>nextToken</code> value in a subsequent request.</p>",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This is the <code>nextToken</code> from a previously truncated response.</p>",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListEzcrcPolicyTemplatesOutput": {
            "type": "structure",
            "required": [
                "templates"
            ],
            "members": {
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This can be provided in a subsequent request to resume pagination.</p>"
                },
                "templates": {
                    "shape": "TemplatesList",
                    "documentation": "<p>List of eZCRC policy templates.</p>"
                }
            }
        },
        "ListMotdsInput": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "MaxResults",
                    "documentation": "<p>The total number of items to return in the response. If the total number of items available is more than the value specified, a <code>nextToken</code> is provided in the response. To resume pagination, provide the <code>nextToken</code> value in a subsequent request.</p>",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This is the <code>nextToken</code> from a previously truncated response.</p>",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListMotdsOutput": {
            "type": "structure",
            "required": [
                "motds"
            ],
            "members": {
                "motds": {
                    "shape": "MotdsList",
                    "documentation": "<p>List of MOTDs.</p>"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This can be provided in a subsequent request to resume pagination.</p>"
                }
            }
        },
        "ListNodesInput": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "MaxNodes",
                    "documentation": "<p>Optional integer. Specifies the maximum number of nodes to return in the response. This parameter value must be greater than 0.</p>",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>Optional string. An opaque pagination token returned from a previous <code>ListNodes</code> operation. If present, indicates where to continue listing.</p>",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "source": {
                    "shape": "NodeId",
                    "documentation": "<p>Optional string. Filters results to only include target nodes that are supported by this source.</p>",
                    "location": "querystring",
                    "locationName": "source"
                },
                "target": {
                    "shape": "NodeId",
                    "documentation": "<p>Optional string. Filters results to only include source nodes that are supported by this target.</p>",
                    "location": "querystring",
                    "locationName": "target"
                },
                "type": {
                    "shape": "RelationshipType",
                    "documentation": "<p>Optional string. Filters results to only include nodes that support this relationship type.</p>",
                    "location": "querystring",
                    "locationName": "type"
                }
            }
        },
        "ListNodesOutput": {
            "type": "structure",
            "required": [
                "nodes"
            ],
            "members": {
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A string, present if there are more nodes.</p>"
                },
                "nodes": {
                    "shape": "NodeList",
                    "documentation": "<p>A list of node definitions.</p>"
                }
            }
        },
        "ListRelationsInput": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "MaxRelations",
                    "documentation": "<p>Optional integer. Specifies the maximum number of relations to return in the response. This parameter value must be greater than 0.</p>",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>Optional string. An opaque pagination token returned from a previous <code>ListRelations</code> operation. If present, indicates where to continue listing.</p>",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "source": {
                    "shape": "ResourceId",
                    "documentation": "<p>Optional string. Filters results to only include relations that have this source. At least one of <code>Source</code> or <code>Target</code> must be provided.</p>",
                    "location": "querystring",
                    "locationName": "source"
                },
                "target": {
                    "shape": "ResourceId",
                    "documentation": "<p>Optional string. Filters results to only include relations that have this target. At least one of <code>Source</code> or <code>Target</code> must be provided.</p>",
                    "location": "querystring",
                    "locationName": "target"
                },
                "type": {
                    "shape": "RelationshipType",
                    "documentation": "<p>Optional string. Filters results to only include relations of this relationship type.</p>",
                    "location": "querystring",
                    "locationName": "type"
                }
            }
        },
        "ListRelationsOutput": {
            "type": "structure",
            "required": [
                "relations"
            ],
            "members": {
                "exceptions": {
                    "shape": "ExceptionsList",
                    "documentation": "<p>A list of exceptions that occurred attempting to list relations.</p>"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A string, present if there are more relations.</p>"
                },
                "relations": {
                    "shape": "RelationList",
                    "documentation": "<p>A list of relations.</p>"
                }
            }
        },
        "ListSampleEventsInput": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "MaxResults",
                    "documentation": "<p>The total number of items to return in the response. If the total number of items available is more than the value specified, a <code>nextToken</code> is provided in the response. To resume pagination, provide the <code>nextToken</code> value in a subsequent request.</p>",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This is the <code>nextToken</code> from a previously truncated response.</p>",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListSampleEventsOutput": {
            "type": "structure",
            "required": [
                "sampleEvents"
            ],
            "members": {
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This can be provided in a subsequent request to resume pagination.</p>"
                },
                "sampleEvents": {
                    "shape": "SampleEventsList",
                    "documentation": "<p>List of sample events.</p>"
                }
            }
        },
        "ListTestEventsInput": {
            "type": "structure",
            "required": [
                "functionName"
            ],
            "members": {
                "functionName": {
                    "shape": "FunctionName",
                    "documentation": "<p>Name of the function to list test events for.</p>",
                    "location": "querystring",
                    "locationName": "functionName"
                },
                "maxResults": {
                    "shape": "MaxResults",
                    "documentation": "<p>The total number of items to return in the response. If the total number of items available is more than the value specified, a <code>nextToken</code> is provided in the response. To resume pagination, provide the <code>nextToken</code> value in a subsequent request.</p>",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This is the <code>nextToken</code> from a previously truncated response.</p>",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListTestEventsOutput": {
            "type": "structure",
            "required": [
                "testEvents"
            ],
            "members": {
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This can be provided in a subsequent request to resume pagination.</p>"
                },
                "testEvents": {
                    "shape": "TestEventsList",
                    "documentation": "<p>List of test events.</p>"
                }
            }
        },
        "Long": {
            "type": "long",
            "box": true
        },
        "ManagedPolicyArn": {
            "type": "string",
            "max": 192,
            "min": 1,
            "pattern": "^arn:[a-zA-Z0-9-]+:iam::aws:policy/service-role/.*$"
        },
        "MaxNodes": {
            "type": "integer",
            "box": true,
            "max": 10000,
            "min": 1
        },
        "MaxRelations": {
            "type": "integer",
            "box": true,
            "max": 10000,
            "min": 1
        },
        "MaxResults": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "MergeIdeDataInput": {
            "type": "structure",
            "required": [
                "hash",
                "key",
                "projectType"
            ],
            "members": {
                "hash": {
                    "shape": "String",
                    "documentation": "<p>Hash of the project being edited.</p>"
                },
                "key": {
                    "shape": "String",
                    "documentation": "<p>Unique identifier of the merge data.</p>"
                },
                "lambdaProperties": {
                    "shape": "LambdaProperties",
                    "documentation": "<p>Properties of a project of &quot;lambda&quot; type.</p>"
                },
                "projectType": {
                    "shape": "ProjectType",
                    "documentation": "<p>The type of project being edited.</p>"
                }
            }
        },
        "MergeIdeDataOutput": {
            "type": "structure",
            "required": [
                "hash"
            ],
            "members": {
                "hash": {
                    "shape": "String",
                    "documentation": "<p>Updated hash for the project being edited.</p>"
                }
            }
        },
        "MotdId": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": "^[0-9a-z]([0-9a-z-]*[0-9a-z])?$"
        },
        "MotdItem": {
            "type": "structure",
            "required": [
                "id",
                "message",
                "type"
            ],
            "members": {
                "id": {
                    "shape": "MotdId",
                    "documentation": "<p>Unique ID of the MOTD.</p>"
                },
                "message": {
                    "shape": "String",
                    "documentation": "<p>Content of the MOTD.</p>"
                },
                "type": {
                    "shape": "MotdType",
                    "documentation": "<p>The MOTD type.</p>"
                }
            }
        },
        "MotdType": {
            "type": "string",
            "enum": [
                "error",
                "info",
                "success",
                "warning"
            ]
        },
        "MotdsList": {
            "type": "list",
            "member": {
                "shape": "MotdItem"
            }
        },
        "NodeDefinition": {
            "type": "structure",
            "members": {
                "definition": {
                    "shape": "String",
                    "documentation": "<p>A JSON string representing the full node definition document.</p>"
                },
                "id": {
                    "shape": "NodeId",
                    "documentation": "<p>The identifier of the node.</p>"
                },
                "vertex": {
                    "shape": "VertexVersion",
                    "documentation": "<p>The Vertex version of the node definition.</p>"
                }
            },
            "documentation": "<p>A definition for a node that Vertex knows about.</p>"
        },
        "NodeId": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": "^[w-]+?(/|%2F)[w-]+?$"
        },
        "NodeList": {
            "type": "list",
            "member": {
                "shape": "NodeDefinition"
            }
        },
        "Percentage": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 0
        },
        "PermissionsBoundary": {
            "type": "structure",
            "required": [
                "permissionsBoundaryArn",
                "permissionsBoundaryType"
            ],
            "members": {
                "permissionsBoundaryArn": {
                    "shape": "String",
                    "documentation": "<p>The ARN of the policy used to set the permissions boundary for the user or role.</p>"
                },
                "permissionsBoundaryType": {
                    "shape": "String",
                    "documentation": "<p>The permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity.</p>"
                }
            }
        },
        "Policies": {
            "type": "list",
            "member": {
                "shape": "Policy"
            }
        },
        "Policy": {
            "type": "structure",
            "required": [
                "document",
                "name",
                "type"
            ],
            "members": {
                "arn": {
                    "shape": "String",
                    "documentation": "<p>For managed policies, the policy ARN.</p>"
                },
                "document": {
                    "shape": "String",
                    "documentation": "<p>The JSON document of this policy.</p>"
                },
                "id": {
                    "shape": "String",
                    "documentation": "<p>For managed policies, the policy ID.</p>"
                },
                "name": {
                    "shape": "String",
                    "documentation": "<p>Name of the policy.</p>"
                },
                "type": {
                    "shape": "PolicyType",
                    "documentation": "<p>The type of policy, either inline or managed.</p>"
                }
            }
        },
        "PolicyType": {
            "type": "string",
            "enum": [
                "inline",
                "managed"
            ]
        },
        "ProjectType": {
            "type": "string",
            "enum": [
                "lambda"
            ]
        },
        "PutTestEventInput": {
            "type": "structure",
            "required": [
                "functionName",
                "template",
                "testEventName"
            ],
            "members": {
                "functionName": {
                    "shape": "FunctionName",
                    "documentation": "<p>Name of the function the test event will belong to.</p>"
                },
                "template": {
                    "shape": "String",
                    "documentation": "<p>The JSON template of the test event.</p>"
                },
                "testEventName": {
                    "shape": "TestEventName",
                    "documentation": "<p>Name of the test event to create or update.</p>",
                    "location": "uri",
                    "locationName": "testEventName"
                }
            }
        },
        "PutTestEventOutput": {
            "type": "structure",
            "required": [
                "testEvent"
            ],
            "members": {
                "testEvent": {
                    "shape": "TestEventDescription",
                    "documentation": "<p>The test event that was created or updated.</p>"
                }
            }
        },
        "RelationException": {
            "type": "structure",
            "members": {
                "action": {
                    "shape": "String",
                    "documentation": "<p>A human-friendly string describing the action that will be performed when calling the <code>CorrectRelation</code> API.</p>"
                },
                "code": {
                    "shape": "String",
                    "documentation": "<p>A machine-friendly string describing this exception.</p>"
                },
                "correctable": {
                    "shape": "Boolean",
                    "documentation": "<p>A boolean indicating whether this exception can be corrected. If true, clients can call the <code>CorrectRelation</code> API to fix the exception.</p>"
                },
                "level": {
                    "shape": "ExceptionLevel",
                    "documentation": "<p>The exception level, one of &quot;info&quot;, &quot;warning&quot;, &quot;error&quot;, or &quot;fatal&quot;.</p>"
                },
                "message": {
                    "shape": "String",
                    "documentation": "<p>A human-friendly string describing this exception.</p>"
                },
                "thrownBy": {
                    "shape": "NodeId",
                    "documentation": "<p>Identifier of the node from which this exception originated.</p>"
                }
            },
            "documentation": "<p>An exception indication an issue with a relation.</p>"
        },
        "RelationList": {
            "type": "list",
            "member": {
                "shape": "RelationObject"
            }
        },
        "RelationObject": {
            "type": "structure",
            "members": {
                "data": {
                    "shape": "String",
                    "documentation": "<p>Arbitrary JSON data associated with the relation.</p>"
                },
                "exception": {
                    "shape": "RelationException",
                    "documentation": "<p>If present, indicates an issue with the relation that may be correctable. Clients can call the <code>CorrectRelation</code> API to fix any correctable exception.</p>"
                },
                "source": {
                    "shape": "ResourceId",
                    "documentation": "<p>Canonical identifier of the source resource in the relation.</p>"
                },
                "target": {
                    "shape": "ResourceId",
                    "documentation": "<p>Canonical identifier of the target resource in the relation.</p>"
                },
                "type": {
                    "shape": "RelationshipType",
                    "documentation": "<p>The relationship type of the relation.</p>"
                }
            },
            "documentation": "<p>Describes a relation.</p>"
        },
        "RelationshipType": {
            "type": "string"
        },
        "ReportApplicationDetails": {
            "type": "string",
            "min": 1
        },
        "ReportApplicationInput": {
            "type": "structure",
            "required": [
                "applicationId",
                "details",
                "semanticVersion"
            ],
            "members": {
                "applicationId": {
                    "shape": "String",
                    "documentation": "<p>ID of the application to report.</p>",
                    "location": "uri",
                    "locationName": "applicationId"
                },
                "details": {
                    "shape": "ReportApplicationDetails",
                    "documentation": "<p>Details associated with the report.</p>"
                },
                "semanticVersion": {
                    "shape": "String",
                    "documentation": "<p>The semantic version of the application.</p>"
                }
            }
        },
        "ReportApplicationOutput": {
            "type": "structure",
            "required": [
                "reportId"
            ],
            "members": {
                "reportId": {
                    "shape": "String",
                    "documentation": "<p>ID of the report that was submitted.</p>"
                }
            }
        },
        "ResourceId": {
            "type": "string"
        },
        "ResourceNotFoundException": {
            "type": "structure",
            "required": [
                "message"
            ],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "error": {
                "httpStatusCode": 404,
                "senderFault": true
            },
            "exception": true
        },
        "ResourceType": {
            "type": "structure",
            "required": [
                "service",
                "statements"
            ],
            "members": {
                "service": {
                    "shape": "Service",
                    "documentation": "<p>Details about the AWS service managing this resource type.</p>"
                },
                "statements": {
                    "shape": "Statements",
                    "documentation": "<p>Atomic policy statements for resources of this type.</p>"
                }
            }
        },
        "Resources": {
            "type": "map",
            "key": {
                "shape": "String"
            },
            "value": {
                "shape": "ResourceType"
            }
        },
        "RoleName": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": "^[w+=,.@-]+$"
        },
        "SampleEventId": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": "^[0-9a-z]([0-9a-z-]*[0-9a-z])?$"
        },
        "SampleEventItem": {
            "type": "structure",
            "required": [
                "group",
                "id",
                "name",
                "template"
            ],
            "members": {
                "blueprints": {
                    "shape": "Blueprints",
                    "documentation": "<p>List of blueprints that this sample event is compatible with.</p>"
                },
                "group": {
                    "shape": "String",
                    "documentation": "<p>Group that the sample event belongs to.</p>"
                },
                "id": {
                    "shape": "SampleEventId",
                    "documentation": "<p>Unique ID of the sample event.</p>"
                },
                "name": {
                    "shape": "String",
                    "documentation": "<p>Name of the sample event.</p>"
                },
                "preview": {
                    "shape": "String",
                    "documentation": "<p>Alias of a feature gate controlling whether the sample event is in preview.</p>"
                },
                "template": {
                    "shape": "String",
                    "documentation": "<p>The JSON template of the sample event.</p>"
                }
            }
        },
        "SampleEventsList": {
            "type": "list",
            "member": {
                "shape": "SampleEventItem"
            }
        },
        "SearchApplicationsInput": {
            "type": "structure",
            "required": [
                "searchText"
            ],
            "members": {
                "accessLevels": {
                    "shape": "String",
                    "documentation": "<p>Specify a list of access levels to restrict results to those with those access levels. By default, apps with all access levels will be returned. Use commas to separate multiple access levels. Valid access levels are: PUBLIC, PRIVATELY_SHARED.</p>"
                },
                "includeAppsWithCapabilities": {
                    "shape": "String",
                    "documentation": "<p>Specify a list of non-standard capabilities to include apps that require those capabilities in the results. Use commas to separate multiple capabilities. Valid capabilities are: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_RESOURCE_POLICY, CAPABILITY_AUTO_EXPAND. If this parameter is not specified, then apps requiring any capabilities will be excluded.</p>"
                },
                "pageNumber": {
                    "shape": "String",
                    "documentation": "<p>The starting page number.</p>"
                },
                "pageSize": {
                    "shape": "String",
                    "documentation": "<p>The maximum number of applications to return in a page.</p>"
                },
                "searchText": {
                    "shape": "String",
                    "documentation": "<p>Text to search for. If not provided, all relevant applications will be returned.</p>"
                },
                "sortFields": {
                    "shape": "String",
                    "documentation": "<p>Specify list of fields and direction for result sorting. Multiple fields separated by commas can be specified for sorting with the first used as the primary sort field, the next used as secondary, and so on. Valid sort fields are: name, deploymentCount, and publisherAlias. If this parameter is not specified, the default sort order is deploymentCount:desc.</p>"
                }
            }
        },
        "SearchApplicationsOutput": {
            "type": "structure",
            "required": [
                "applications",
                "approximateResultCount"
            ],
            "members": {
                "applications": {
                    "shape": "ApplicationsList",
                    "documentation": "<p>List of applications.</p>"
                },
                "approximateResultCount": {
                    "shape": "Integer",
                    "documentation": "<p>The approximate number of results that were returned.</p>"
                }
            }
        },
        "Service": {
            "type": "structure",
            "required": [
                "icon",
                "name"
            ],
            "members": {
                "icon": {
                    "shape": "String",
                    "documentation": "<p>Base64-encoded SVG data URI of an icon representing the service.</p>"
                },
                "name": {
                    "shape": "String",
                    "documentation": "<p>Name of the service.</p>"
                }
            }
        },
        "ServiceData": {
            "type": "map",
            "key": {
                "shape": "String"
            },
            "value": {
                "shape": "ServiceDataForIdentifier"
            }
        },
        "ServiceDataForIdentifier": {
            "type": "structure",
            "required": [
                "service"
            ],
            "members": {
                "consoleUrl": {
                    "shape": "String",
                    "documentation": "<p>If the identifier is determined to be a resource that has a console URL, the full URL to the resource in the AWS management console.</p>"
                },
                "service": {
                    "shape": "String",
                    "documentation": "<p>JSON string containing data about the service.</p>"
                }
            }
        },
        "StackArn": {
            "type": "string",
            "min": 1,
            "pattern": "^[a-zA-Z][-a-zA-Z0-9]*|arn:[-a-zA-Z0-9:/._+]*$"
        },
        "StackLinks": {
            "type": "map",
            "key": {
                "shape": "String"
            },
            "value": {
                "shape": "String"
            }
        },
        "StackResources": {
            "type": "list",
            "member": {
                "shape": "String"
            }
        },
        "Statement": {
            "type": "structure",
            "required": [
                "action",
                "effect",
                "resource",
                "service",
                "source"
            ],
            "members": {
                "action": {
                    "shape": "String",
                    "documentation": "<p>The IAM action of this statement.</p>"
                },
                "effect": {
                    "shape": "Effect",
                    "documentation": "<p>The statement's effect, either Allow or Deny.</p>"
                },
                "resource": {
                    "shape": "String",
                    "documentation": "<p>The resource that this statement operates on.</p>"
                },
                "service": {
                    "shape": "String",
                    "documentation": "<p>The AWS service corresponding to the statement's action and resource.</p>"
                },
                "source": {
                    "shape": "StatementSource",
                    "documentation": "<p>Details about the policy this statement was extracted from.</p>"
                }
            }
        },
        "StatementSource": {
            "type": "structure",
            "required": [
                "index",
                "policyName",
                "policyType"
            ],
            "members": {
                "index": {
                    "shape": "String",
                    "documentation": "<p>Either the original IAM policy statement ID or its numeric index in the array of statements for that policy.</p>"
                },
                "policyName": {
                    "shape": "String",
                    "documentation": "<p>Name of the policy.</p>"
                },
                "policyType": {
                    "shape": "PolicyType",
                    "documentation": "<p>The type of policy, either inline or managed.</p>"
                }
            }
        },
        "Statements": {
            "type": "list",
            "member": {
                "shape": "Statement"
            }
        },
        "String": {
            "type": "string"
        },
        "TemplateId": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": "^[a-zA-Z]+$"
        },
        "TemplateItem": {
            "type": "structure",
            "required": [
                "id",
                "implicit",
                "services"
            ],
            "members": {
                "document": {
                    "shape": "String",
                    "documentation": "<p>The JSON document of this policy template. At least one of <code>document</code> or <code>managedPolicyArn</code> must be defined.</p>"
                },
                "id": {
                    "shape": "TemplateId",
                    "documentation": "<p>ID of the eZCRC policy template.</p>"
                },
                "implicit": {
                    "shape": "Boolean",
                    "documentation": "<p>Whether the template is implicitly added to a role based on other configuration, vs. selected by the customer.</p>"
                },
                "managedPolicyArn": {
                    "shape": "ManagedPolicyArn",
                    "documentation": "<p>ARN of a managed policy for eZCRC to add. At least one of <code>document</code> or <code>managedPolicyArn</code> must be defined.</p>"
                },
                "services": {
                    "shape": "TemplateServices",
                    "documentation": "<p>Names of AWS services the template policy references.</p>"
                },
                "variables": {
                    "shape": "TemplateVariables",
                    "documentation": "<p>Template variables in the inline policy document, if defined.</p>"
                },
                "version": {
                    "shape": "Integer",
                    "documentation": "<p>The version of an inline policy document, if defined.</p>"
                }
            }
        },
        "TemplateServices": {
            "type": "list",
            "member": {
                "shape": "String"
            },
            "max": 5,
            "min": 0
        },
        "TemplateVariables": {
            "type": "list",
            "member": {
                "shape": "String"
            },
            "max": 10,
            "min": 0
        },
        "TemplatesList": {
            "type": "list",
            "member": {
                "shape": "TemplateItem"
            }
        },
        "TestEventDescription": {
            "type": "structure",
            "required": [
                "template",
                "testEventName"
            ],
            "members": {
                "template": {
                    "shape": "String",
                    "documentation": "<p>The JSON template of the test event.</p>"
                },
                "testEventName": {
                    "shape": "TestEventName",
                    "documentation": "<p>Name of the test event.</p>"
                }
            }
        },
        "TestEventItem": {
            "type": "structure",
            "required": [
                "testEventName"
            ],
            "members": {
                "testEventName": {
                    "shape": "TestEventName",
                    "documentation": "<p>Name of the test event.</p>"
                }
            }
        },
        "TestEventName": {
            "type": "string",
            "max": 25,
            "min": 1,
            "pattern": "^[a-zA-Z0-9-_.]+$"
        },
        "TestEventsList": {
            "type": "list",
            "member": {
                "shape": "TestEventItem"
            }
        },
        "ThrottlingException": {
            "type": "structure",
            "required": [
                "message"
            ],
            "members": {
                "message": {
                    "shape": "String"
                },
                "retryAfterSeconds": {
                    "shape": "Integer",
                    "location": "header",
                    "locationName": "Retry-After"
                }
            },
            "error": {
                "httpStatusCode": 429,
                "senderFault": true
            },
            "exception": true,
            "retryable": {
                "throttling": false
            }
        },
        "Timestamp": {
            "type": "timestamp"
        },
        "TrustedEntities": {
            "type": "list",
            "member": {
                "shape": "String"
            }
        },
        "UnreservedConcurrentExecutions": {
            "type": "integer",
            "box": true,
            "min": 0
        },
        "UnreservedConcurrentExecutionsMinimum": {
            "type": "integer",
            "box": true,
            "min": 0
        },
        "UpdateRelationInput": {
            "type": "structure",
            "required": [
                "source",
                "target",
                "type"
            ],
            "members": {
                "data": {
                    "shape": "String",
                    "documentation": "<p>Arbitrary JSON data associated with the relation. The data must provide enough information to uniquely identify the relation to update.</p>"
                },
                "source": {
                    "shape": "ResourceId",
                    "documentation": "<p>Identifier of the source of the relation to update.</p>"
                },
                "target": {
                    "shape": "ResourceId",
                    "documentation": "<p>Identifier of the target of the relation to update.</p>"
                },
                "type": {
                    "shape": "RelationshipType",
                    "documentation": "<p>The relationship type of the relation to update.</p>"
                }
            }
        },
        "UpdateRelationOutput": {
            "type": "structure",
            "members": {
                "relation": {
                    "shape": "RelationObject",
                    "documentation": "<p>The relation that was updated, possibly containing a <code>RelationException</code> if errors occurred.</p>"
                }
            }
        },
        "UserId": {
            "type": "string",
            "pattern": "^[da-f]{64}$"
        },
        "UserSettings": {
            "type": "structure",
            "members": {
                "accountLimit": {
                    "shape": "AccountLimit",
                    "documentation": "<p>Limits that are related to concurrency and code storage.</p>"
                },
                "accountUsage": {
                    "shape": "AccountUsage",
                    "documentation": "<p>The number of functions and amount of storage in use.</p>"
                },
                "exception": {
                    "shape": "String",
                    "documentation": "<p>An inline message indicating failure to retrieve user settings. If present, the <code>accountLimit</code> and <code>accountUsage</code> fields will not be defined.</p>"
                }
            }
        },
        "ValidationException": {
            "type": "structure",
            "required": [
                "message"
            ],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "error": {
                "httpStatusCode": 400,
                "senderFault": true
            },
            "exception": true
        },
        "VertexAccessDeniedException": {
            "type": "structure",
            "required": [
                "code",
                "message"
            ],
            "members": {
                "code": {
                    "shape": "String",
                    "documentation": "<p>A machine-friendly string describing this exception.</p>"
                },
                "message": {
                    "shape": "String",
                    "documentation": "<p>A human-friendly string describing this exception.</p>"
                }
            },
            "documentation": "<p>The caller does not have sufficient permissions to perform this request.</p>",
            "error": {
                "httpStatusCode": 403,
                "senderFault": true
            },
            "exception": true
        },
        "VertexConflictException": {
            "type": "structure",
            "required": [
                "code",
                "message"
            ],
            "members": {
                "code": {
                    "shape": "String",
                    "documentation": "<p>A machine-friendly string describing this exception.</p>"
                },
                "message": {
                    "shape": "String",
                    "documentation": "<p>A human-friendly string describing this exception.</p>"
                }
            },
            "documentation": "<p>The resource already exists, or another operation is in progress.</p>",
            "error": {
                "httpStatusCode": 409,
                "senderFault": true
            },
            "exception": true
        },
        "VertexInternalServerException": {
            "type": "structure",
            "required": [
                "code",
                "message"
            ],
            "members": {
                "code": {
                    "shape": "String",
                    "documentation": "<p>A machine-friendly string describing this exception.</p>"
                },
                "message": {
                    "shape": "String",
                    "documentation": "<p>A human-friendly string describing this exception.</p>"
                },
                "retryAfterSeconds": {
                    "shape": "Integer",
                    "documentation": "<p>The number of seconds the caller should wait before retrying.</p>",
                    "location": "header",
                    "locationName": "Retry-After"
                }
            },
            "documentation": "<p>The Vertex service encountered an internal error.</p>",
            "error": {
                "httpStatusCode": 500
            },
            "exception": true,
            "fault": true,
            "retryable": {
                "throttling": false
            }
        },
        "VertexResourceNotFoundException": {
            "type": "structure",
            "required": [
                "code",
                "message"
            ],
            "members": {
                "code": {
                    "shape": "String",
                    "documentation": "<p>A machine-friendly string describing this exception.</p>"
                },
                "message": {
                    "shape": "String",
                    "documentation": "<p>A human-friendly string describing this exception.</p>"
                }
            },
            "documentation": "<p>The resource specified in the request does not exist.</p>",
            "error": {
                "httpStatusCode": 404,
                "senderFault": true
            },
            "exception": true
        },
        "VertexThrottlingException": {
            "type": "structure",
            "required": [
                "code",
                "message"
            ],
            "members": {
                "code": {
                    "shape": "String",
                    "documentation": "<p>A machine-friendly string describing this exception.</p>"
                },
                "message": {
                    "shape": "String",
                    "documentation": "<p>A human-friendly string describing this exception.</p>"
                },
                "retryAfterSeconds": {
                    "shape": "Integer",
                    "documentation": "<p>The number of seconds the caller should wait before retrying.</p>",
                    "location": "header",
                    "locationName": "Retry-After"
                }
            },
            "documentation": "<p>The caller is sending too many requests to Vertex and is currently being throttled.</p>",
            "error": {
                "httpStatusCode": 429,
                "senderFault": true
            },
            "exception": true,
            "retryable": {
                "throttling": false
            }
        },
        "VertexValidationException": {
            "type": "structure",
            "required": [
                "code",
                "message"
            ],
            "members": {
                "code": {
                    "shape": "String",
                    "documentation": "<p>A machine-friendly string describing this exception.</p>"
                },
                "message": {
                    "shape": "String",
                    "documentation": "<p>A human-friendly string describing this exception.</p>"
                }
            },
            "documentation": "<p>One of the parameters in the request is invalid.</p>",
            "error": {
                "httpStatusCode": 400,
                "senderFault": true
            },
            "exception": true
        },
        "VertexVersion": {
            "type": "string",
            "pattern": "^2.0$"
        },
        "ListRuntimesInput": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "MaxResults",
                    "documentation": "<p>The total number of items to return in the response. If the total number of items available is more than the value specified, a <code>nextToken</code> is provided in the response. To resume pagination, provide the <code>nextToken</code> value in a subsequent request.</p>",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This is the <code>nextToken</code> from a previously truncated response.</p>",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListRuntimesOutput": {
            "type": "structure",
            "required": [
                "runtimes"
            ],
            "members": {
                "nextToken": {
                    "shape": "String",
                    "documentation": "<p>A token to specify where to start paginating. This can be provided in a subsequent request to resume pagination.</p>"
                },
                "runtimes": {
                    "shape": "RuntimesList",
                    "documentation": "<p>List of runtimes.</p>"
                }
            }
        },
        "RuntimeId": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": "^[-a-z0-9._]+$"
        },
        "RuntimeItem": {
            "type": "structure",
            "required": [
                "createSupported",
                "id",
                "status",
                "updateSupported"
            ],
            "members": {
                "createSupported": {
                    "shape": "Boolean",
                    "documentation": "<p>Whether it's possible to create a new function with this runtime.</p>"
                },
                "id": {
                    "shape": "RuntimeId",
                    "documentation": "<p>Unique ID of the runtime, equivalent to its customer-facing enum.</p>"
                },
                "status": {
                    "shape": "RuntimeStatus",
                    "documentation": "<p>The status of the runtime.</p>"
                },
                "updateSupported": {
                    "shape": "Boolean",
                    "documentation": "<p>Whether it's possible to update a function using this runtime.</p>"
                }
            }
        },
        "RuntimeStatus": {
            "type": "string",
            "enum": [
                "preview",
                "available",
                "deprecatedCreate",
                "deprecatedCreateAndUpdate",
                "notAvailable",
                "abandoned"
            ]
        },
        "RuntimesList": {
            "type": "list",
            "member": {
                "shape": "RuntimeItem"
            }
        }
    },
    "documentation": "<p>Lambda console API</p>"
}